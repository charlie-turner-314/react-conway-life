{"version":3,"sources":["components/Cell.tsx","App.tsx","index.tsx"],"names":["Cell","props","className","style","width","size","height","backgroundColor","value","outline","onClick","React","memo","cols","locations","newGrid","p","grid","i","push","Array","from","Math","random","App","useState","setGrid","running","setRunning","runningRef","useRef","useEffect","setTimeout","current","produce","gridCopy","j","neighbors","forEach","xinc","yinc","nx","ny","rows","nextGen","map","row","rid","cell","cid","r","c","handleClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAEMA,EAAO,SAACC,GACZ,OACE,qBACEC,UAAU,OACVC,MAAO,CACLC,MAAM,GAAD,OAAKH,EAAMI,KAAX,MACLC,OAAO,GAAD,OAAKL,EAAMI,KAAX,MACNE,gBAAiC,IAAhBN,EAAMO,MAAc,OAAS,QAC9CC,QAAS,mBAEXC,QAAS,kBAAMT,EAAMS,cAKZC,MAAMC,KAAKZ,GCXpBa,EAAO,IAGPC,EAAY,CAChB,CAAC,EAAG,GACJ,CAAC,GAAI,GACL,CAAC,EAAG,GACJ,CAAC,EAAG,GACJ,CAAC,GAAI,GACL,EAAE,EAAG,GACL,EAAE,EAAG,GACL,EAAE,GAAI,IAEFC,EAAU,SAACC,GAEf,IADA,IAAIC,EAAO,GACFC,EAAI,EAAGA,EAhBL,GAgBeA,IACxBD,EAAKE,KACHC,MAAMC,KAAKD,MAAMP,IAAO,WACtB,OAAOS,KAAKC,SAAWP,EAAI,EAAI,MAIrC,OAAOC,GA0GMO,MA1Ef,WACE,MAAwBC,oBAAS,kBAAMV,EAAQ,OAA/C,mBAAOE,EAAP,KAAaS,EAAb,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KACMC,EAAaC,kBAAO,GAoB1B,OAlBAC,qBAAU,WAMRC,YALgB,WACVH,EAAWI,SACbP,EArCQ,SAACT,GA0Bf,OAzBgBiB,YAAQjB,GAAM,SAACkB,GAC7B,IADwD,IAAD,WAC9CjB,GACP,IAFqD,eAE5CkB,GACP,IAAIC,EAAY,EAChBvB,EAAUwB,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAVC,EAAU,KAC9BC,EAAKL,EAAIG,EACTG,EAAKxB,EAAIsB,EAGTC,EAAK,IAAGA,EAAK5B,IACb4B,GAAM5B,IAAM4B,EAAK,GACjBC,EAAK,IAAGA,EAAKC,IACbD,GAvCD,KAuCaA,EAAK,GAGA,IAAjBzB,EAAKyB,GAAID,IAAWJ,OAEtBA,EAAY,GAAKA,EAAY,EAC/BF,EAASjB,GAAGkB,GAAK,EACO,IAAfnB,EAAKC,GAAGkB,IAA0B,IAAdC,IAC7BF,EAASjB,GAAGkB,GAAK,IAlBZA,EAAI,EAAGA,EAAIvB,EAAMuB,IAAM,EAAvBA,IADFlB,EAAI,EAAGA,EA5BP,GA4BiBA,IAAM,EAAvBA,MAmCG0B,CAAQ3B,MAGA,MACnB,CAACA,EAAMU,IAYR,qCACE,wBACEjB,QAAS,WACPmB,EAAWI,SAAU,EACrBL,GAAW,GACXF,EAAQX,EAAQ,MAJpB,6BASA,wBACEL,QAAS,WACPmB,EAAWI,SAAU,EACrBL,GAAW,GACXF,EAAQX,EAAQ,KAJpB,4BASA,wBACEL,QAAS,WACPmB,EAAWI,SAAWJ,EAAWI,QACjCL,GAAYD,IAHhB,SAMGE,EAAWI,QAAU,OAAS,UAGjC,qBAAK/B,UAAU,cAAf,SACGe,EAAK4B,KAAI,SAACC,EAAKC,GACd,OACE,qBAAwB7C,UAAU,MAAlC,SACG4C,EAAID,KAAI,SAACG,EAAMC,GACd,OACE,cAAC,EAAD,CAEEzC,MAAOwC,EACP3C,KAlHF,GAmHEK,QAAS,kBAhDP,SAACwC,EAAWC,GAC9BtB,EAAWI,SAAU,EACrBL,GAAW,GACX,IAAIb,EAAUmB,YAAQjB,GAAM,SAACF,GAC3BA,EAAQmC,GAAGC,GAAK,KAElBzB,EAAQX,GA0CuBqC,CAAYL,EAAKE,KAJlC,UACUF,EADV,YACiBE,QAJvB,cAAiBF,aC9G7BM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.af50c86f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Cell = (props: any) => {\n  return (\n    <div\n      className=\"cell\"\n      style={{\n        width: `${props.size}px`,\n        height: `${props.size}px`,\n        backgroundColor: props.value === 1 ? \"pink\" : \"white\",\n        outline: \"1px solid black\",\n      }}\n      onClick={() => props.onClick()}\n    ></div>\n  );\n};\n\nexport default React.memo(Cell);\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport produce from \"immer\";\nimport \"./App.css\";\nimport Cell from \"./components/Cell\";\n\nconst rows = 40;\nconst cols = 100;\nconst cellWidth = 20;\n\nconst locations = [\n  [0, 1],\n  [0, -1],\n  [1, 0],\n  [1, 1],\n  [1, -1],\n  [-1, 0],\n  [-1, 1],\n  [-1, -1],\n];\nconst newGrid = (p: number) => {\n  let grid = [];\n  for (let i = 0; i < rows; i++) {\n    grid.push(\n      Array.from(Array(cols), () => {\n        return Math.random() < p ? 1 : 0;\n      })\n    );\n  }\n  return grid;\n};\n\nconst nextGen = (grid: (1 | 0)[][]) => {\n  const newGrid = produce(grid, (gridCopy: (1 | 0)[][]) => {\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < cols; j++) {\n        let neighbors = 0;\n        locations.forEach(([xinc, yinc]) => {\n          let nx = j + xinc;\n          let ny = i + yinc;\n\n          // wraparound\n          if (nx < 0) nx = cols - 1;\n          if (nx >= cols) nx = 0;\n          if (ny < 0) ny = rows - 1;\n          if (ny >= rows) ny = 0;\n\n          // check if occupied\n          if (grid[ny][nx] === 1) neighbors++;\n        });\n        if (neighbors < 2 || neighbors > 3) {\n          gridCopy[i][j] = 0;\n        } else if (grid[i][j] === 0 && neighbors === 3) {\n          gridCopy[i][j] = 1;\n        }\n      }\n    }\n  });\n  return newGrid;\n};\n\nfunction App() {\n  const [grid, setGrid] = useState(() => newGrid(0.5));\n  const [running, setRunning] = useState(false);\n  const runningRef = useRef(false);\n\n  useEffect(() => {\n    const animate = () => {\n      if (runningRef.current) {\n        setGrid(nextGen(grid));\n      }\n    };\n    setTimeout(animate, 50);\n  }, [grid, running]);\n\n  const handleClick = (r: number, c: number) => {\n    runningRef.current = false;\n    setRunning(false);\n    let newGrid = produce(grid, (newGrid) => {\n      newGrid[r][c] = 1;\n    });\n    setGrid(newGrid);\n  };\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          runningRef.current = false;\n          setRunning(false);\n          setGrid(newGrid(0.5));\n        }}\n      >\n        New Random Grid\n      </button>\n      <button\n        onClick={() => {\n          runningRef.current = false;\n          setRunning(false);\n          setGrid(newGrid(0));\n        }}\n      >\n        New Empty Grid\n      </button>\n      <button\n        onClick={() => {\n          runningRef.current = !runningRef.current;\n          setRunning(!running);\n        }}\n      >\n        {runningRef.current ? \"stop\" : \"start\"}\n      </button>\n\n      <div className=\"gridDisplay\">\n        {grid.map((row, rid) => {\n          return (\n            <div key={`row-${rid}`} className=\"row\">\n              {row.map((cell, cid) => {\n                return (\n                  <Cell\n                    key={`${rid}-${cid}`}\n                    value={cell}\n                    size={cellWidth}\n                    onClick={() => handleClick(rid, cid)}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}